% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_influential_TF.R
\name{findIT_enrichInShuffle}
\alias{findIT_enrichInShuffle}
\title{findI(nfluential)T(F)_enrichInShuffle}
\usage{
findIT_enrichInShuffle(
  input_feature_id,
  peak_GR,
  TF_GR_database,
  shuffleN = 1000,
  verbose = TRUE
)
}
\arguments{
\item{input_feature_id}{a character vector which represent peaks set
which you want to find influential TF for}

\item{peak_GR}{a GRange object represent your whole feature location with a
column named feature_id, which your input_feature_id should a part of it.}

\item{TF_GR_database}{TF peak GRange with a column named TF_id representing you TF name}

\item{shuffleN}{shuffle number}

\item{verbose}{whether you want to report detailed running message}
}
\value{
data.frame
}
\description{
find influential TF of your input peak set compared with your whole peak sets
based on TF ChIP-Seq or motif data.
}
\details{
Please note that enrichInShuffle is not useful in large number of peaks.Because there will
be many TF co-regulate your region, which means there are many TF will be significant.
And in this condition, there are many TF's p-value will be 0 even you shffule 1e4 or more times.
So the rank and p-value will be no useful.

But it may be useful in about small number of peaks. It can consider the true hit numebrs in your peaks
instead of 1 like findIT_enichInAll. And I also find fihser test in findIT_enrichInAll more not report significant
result in small number peaks.
}
\examples{
data("test_featureSet")
peak_path <- system.file("extdata", "ATAC.bed.gz", package = "FindIT2")
peak_GR <- loadPeakFile(peak_path)

ChIP_peak_path <- system.file("extdata", "ChIP.bed.gz", package = "FindIT2")
ChIP_peak_GR <- loadPeakFile(ChIP_peak_path)
ChIP_peak_GR$TF_id <- "AT1G28300"

set.seed(20160806)
findIT_enrichInShuffle(
    input_feature_id = test_featureSet,
    peak_GR = peak_GR,
    TF_GR_database = ChIP_peak_GR,
    shuffleN = 10
) -> result_findIT_enrichInShuffle
}
